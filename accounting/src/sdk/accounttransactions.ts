/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import { accountTransactionsGet } from "../funcs/accountTransactionsGet.js";
import { accountTransactionsList } from "../funcs/accountTransactionsList.js";
import { ClientSDK, RequestOptions } from "../lib/sdks.js";
import * as operations from "./models/operations/index.js";
import { unwrapAsync } from "./types/fp.js";

export class AccountTransactions extends ClientSDK {
  /**
   * Get account transaction
   *
   * @remarks
   * The *Get account transaction* endpoint returns a single account transaction for a given accountTransactionId.
   *
   * [Account transactions](https://docs.codat.io/accounting-api#/schemas/AccountTransaction) represent bank activity within an accounting platform. All transactions that go through a bank account are recorded as account transactions.
   *
   * Check out our [coverage explorer](https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=accountTransactions) for integrations that support getting a specific account transaction.
   *
   * Before using this endpoint, you must have [retrieved data for the company](https://docs.codat.io/codat-api#/operations/refresh-company-data).
   */
  async get(
    accountTransactionId: string,
    companyId: string,
    connectionId: string,
    options?: RequestOptions,
  ): Promise<operations.GetAccountTransactionResponse> {
    return unwrapAsync(accountTransactionsGet(
      this,
      accountTransactionId,
      companyId,
      connectionId,
      options,
    ));
  }

  /**
   * List account transactions
   *
   * @remarks
   * The *List account transactions* endpoint returns a list of [account transactions](https://docs.codat.io/accounting-api#/schemas/AccountTransaction) for a given company's connection.
   *
   * [Account transactions](https://docs.codat.io/accounting-api#/schemas/AccountTransaction) represent bank activity within an accounting platform. All transactions that go through a bank account are recorded as account transactions.
   *
   * Before using this endpoint, you must have [retrieved data for the company](https://docs.codat.io/codat-api#/operations/refresh-company-data).
   */
  async list(
    request: operations.ListAccountTransactionsRequest,
    options?: RequestOptions,
  ): Promise<operations.ListAccountTransactionsResponse> {
    return unwrapAsync(accountTransactionsList(
      this,
      request,
      options,
    ));
  }
}
