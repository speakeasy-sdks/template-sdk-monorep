/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Name of underlying data type.
 */
export enum AccountTransactionLineRecordRefDataType {
    BankTransactions = "bankTransactions",
    BillCreditNotes = "billCreditNotes",
    BillPayments = "billPayments",
    Bills = "bills",
    CreditNotes = "creditNotes",
    DirectCosts = "directCosts",
    DirectIncomes = "directIncomes",
    Invoices = "invoices",
    JournalEntries = "journalEntries",
    Payments = "payments",
    Transfers = "transfers",
}

/**
 * Links an account transaction line to the underlying record that created it.
 */
export type AccountTransactionLineRecordRef = {
    /**
     * Name of underlying data type.
     */
    dataType?: AccountTransactionLineRecordRefDataType | undefined;
    /**
     * 'id' of the underlying record or data type.
     */
    id?: string | undefined;
};

/** @internal */
export namespace AccountTransactionLineRecordRefDataType$ {
    export const inboundSchema: z.ZodNativeEnum<typeof AccountTransactionLineRecordRefDataType> =
        z.nativeEnum(AccountTransactionLineRecordRefDataType);
    export const outboundSchema: z.ZodNativeEnum<typeof AccountTransactionLineRecordRefDataType> =
        inboundSchema;
}

/** @internal */
export namespace AccountTransactionLineRecordRef$ {
    export const inboundSchema: z.ZodType<AccountTransactionLineRecordRef, z.ZodTypeDef, unknown> =
        z.object({
            dataType: AccountTransactionLineRecordRefDataType$.inboundSchema.optional(),
            id: z.string().optional(),
        });

    export type Outbound = {
        dataType?: string | undefined;
        id?: string | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        AccountTransactionLineRecordRef
    > = z.object({
        dataType: AccountTransactionLineRecordRefDataType$.outboundSchema.optional(),
        id: z.string().optional(),
    });
}
