/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { PushOptionType, PushOptionType$ } from "./pushoptiontype.js";
import * as z from "zod";

export type PushOptionChoice = {
    /**
     * A description of the property.
     */
    description?: string | undefined;
    /**
     * The property's display name.
     */
    displayName?: string | undefined;
    /**
     * The property is required if `True`.
     */
    required?: boolean | undefined;
    /**
     * The option type.
     */
    type?: PushOptionType | undefined;
    /**
     * Allowed value for field.
     */
    value?: string | undefined;
};

/** @internal */
export namespace PushOptionChoice$ {
    export const inboundSchema: z.ZodType<PushOptionChoice, z.ZodTypeDef, unknown> = z.object({
        description: z.string().optional(),
        displayName: z.string().optional(),
        required: z.boolean().optional(),
        type: PushOptionType$.inboundSchema.optional(),
        value: z.string().optional(),
    });

    export type Outbound = {
        description?: string | undefined;
        displayName?: string | undefined;
        required?: boolean | undefined;
        type?: string | undefined;
        value?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PushOptionChoice> = z.object({
        description: z.string().optional(),
        displayName: z.string().optional(),
        required: z.boolean().optional(),
        type: PushOptionType$.outboundSchema.optional(),
        value: z.string().optional(),
    });
}
