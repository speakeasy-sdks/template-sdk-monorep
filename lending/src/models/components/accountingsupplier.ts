/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { AccountingAddress, AccountingAddress$ } from "./accountingaddress";
import { Metadata, Metadata$ } from "./metadata";
import { SupplementalData, SupplementalData$ } from "./supplementaldata";
import { SupplierStatus, SupplierStatus$ } from "./supplierstatus";
import * as z from "zod";

/**
 * > View the coverage for suppliers in the <a className="external" href="https://knowledge.codat.io/supported-features/accounting?view=tab-by-data-type&dataType=suppliers" target="_blank">Data coverage explorer</a>.
 *
 * @remarks
 *
 * ## Overview
 *
 * From the **Suppliers** endpoints, you can retrieve a list of [all the suppliers for a company](https://docs.codat.io/lending-api#/operations/list-suppliers). Suppliers' data links to accounts payable [bills](https://docs.codat.io/lending-api#/schemas/Bill).
 */
export type AccountingSupplier = {
    modifiedDate?: string | undefined;
    sourceModifiedDate?: string | undefined;
    /**
     * Identifier for the supplier, unique to the company in the accounting platform.
     */
    id?: string | undefined;
    /**
     * Name of the supplier as recorded in the accounting system, typically the company name.
     */
    supplierName?: string | null | undefined;
    /**
     * Name of the main contact for the supplier.
     */
    contactName?: string | null | undefined;
    /**
     * Email address that the supplier may be contacted on.
     */
    emailAddress?: string | null | undefined;
    /**
     * Phone number that the supplier may be contacted on.
     */
    phone?: string | null | undefined;
    /**
     * An array of Addresses.
     */
    addresses?: Array<AccountingAddress> | null | undefined;
    /**
     * Company number of the supplier. In the UK, this is typically the company registration number issued by Companies House.
     */
    registrationNumber?: string | null | undefined;
    /**
     * Supplier's company tax number.
     */
    taxNumber?: string | null | undefined;
    /**
     * Status of the supplier.
     */
    status: SupplierStatus;
    /**
     * Default currency the supplier's transactional data is recorded in.
     */
    defaultCurrency?: string | null | undefined;
    metadata?: Metadata | undefined;
    /**
     * Supplemental data is additional data you can include in our standard data types.
     *
     * @remarks
     *
     * It is referenced as a configured dynamic key value pair that is unique to the accounting platform. [Learn more](https://docs.codat.io/using-the-api/supplemental-data/overview) about supplemental data.
     */
    supplementalData?: SupplementalData | undefined;
};

/** @internal */
export namespace AccountingSupplier$ {
    export type Inbound = {
        modifiedDate?: string | undefined;
        sourceModifiedDate?: string | undefined;
        id?: string | undefined;
        supplierName?: string | null | undefined;
        contactName?: string | null | undefined;
        emailAddress?: string | null | undefined;
        phone?: string | null | undefined;
        addresses?: Array<AccountingAddress$.Inbound> | null | undefined;
        registrationNumber?: string | null | undefined;
        taxNumber?: string | null | undefined;
        status: SupplierStatus;
        defaultCurrency?: string | null | undefined;
        metadata?: Metadata$.Inbound | undefined;
        supplementalData?: SupplementalData$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<AccountingSupplier, z.ZodTypeDef, Inbound> = z
        .object({
            modifiedDate: z.string().optional(),
            sourceModifiedDate: z.string().optional(),
            id: z.string().optional(),
            supplierName: z.nullable(z.string()).optional(),
            contactName: z.nullable(z.string()).optional(),
            emailAddress: z.nullable(z.string()).optional(),
            phone: z.nullable(z.string()).optional(),
            addresses: z.nullable(z.array(AccountingAddress$.inboundSchema)).optional(),
            registrationNumber: z.nullable(z.string()).optional(),
            taxNumber: z.nullable(z.string()).optional(),
            status: SupplierStatus$,
            defaultCurrency: z.nullable(z.string()).optional(),
            metadata: Metadata$.inboundSchema.optional(),
            supplementalData: SupplementalData$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.modifiedDate === undefined ? null : { modifiedDate: v.modifiedDate }),
                ...(v.sourceModifiedDate === undefined
                    ? null
                    : { sourceModifiedDate: v.sourceModifiedDate }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.supplierName === undefined ? null : { supplierName: v.supplierName }),
                ...(v.contactName === undefined ? null : { contactName: v.contactName }),
                ...(v.emailAddress === undefined ? null : { emailAddress: v.emailAddress }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.registrationNumber === undefined
                    ? null
                    : { registrationNumber: v.registrationNumber }),
                ...(v.taxNumber === undefined ? null : { taxNumber: v.taxNumber }),
                status: v.status,
                ...(v.defaultCurrency === undefined
                    ? null
                    : { defaultCurrency: v.defaultCurrency }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.supplementalData === undefined
                    ? null
                    : { supplementalData: v.supplementalData }),
            };
        });

    export type Outbound = {
        modifiedDate?: string | undefined;
        sourceModifiedDate?: string | undefined;
        id?: string | undefined;
        supplierName?: string | null | undefined;
        contactName?: string | null | undefined;
        emailAddress?: string | null | undefined;
        phone?: string | null | undefined;
        addresses?: Array<AccountingAddress$.Outbound> | null | undefined;
        registrationNumber?: string | null | undefined;
        taxNumber?: string | null | undefined;
        status: SupplierStatus;
        defaultCurrency?: string | null | undefined;
        metadata?: Metadata$.Outbound | undefined;
        supplementalData?: SupplementalData$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, AccountingSupplier> = z
        .object({
            modifiedDate: z.string().optional(),
            sourceModifiedDate: z.string().optional(),
            id: z.string().optional(),
            supplierName: z.nullable(z.string()).optional(),
            contactName: z.nullable(z.string()).optional(),
            emailAddress: z.nullable(z.string()).optional(),
            phone: z.nullable(z.string()).optional(),
            addresses: z.nullable(z.array(AccountingAddress$.outboundSchema)).optional(),
            registrationNumber: z.nullable(z.string()).optional(),
            taxNumber: z.nullable(z.string()).optional(),
            status: SupplierStatus$,
            defaultCurrency: z.nullable(z.string()).optional(),
            metadata: Metadata$.outboundSchema.optional(),
            supplementalData: SupplementalData$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                ...(v.modifiedDate === undefined ? null : { modifiedDate: v.modifiedDate }),
                ...(v.sourceModifiedDate === undefined
                    ? null
                    : { sourceModifiedDate: v.sourceModifiedDate }),
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.supplierName === undefined ? null : { supplierName: v.supplierName }),
                ...(v.contactName === undefined ? null : { contactName: v.contactName }),
                ...(v.emailAddress === undefined ? null : { emailAddress: v.emailAddress }),
                ...(v.phone === undefined ? null : { phone: v.phone }),
                ...(v.addresses === undefined ? null : { addresses: v.addresses }),
                ...(v.registrationNumber === undefined
                    ? null
                    : { registrationNumber: v.registrationNumber }),
                ...(v.taxNumber === undefined ? null : { taxNumber: v.taxNumber }),
                status: v.status,
                ...(v.defaultCurrency === undefined
                    ? null
                    : { defaultCurrency: v.defaultCurrency }),
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
                ...(v.supplementalData === undefined
                    ? null
                    : { supplementalData: v.supplementalData }),
            };
        });
}
