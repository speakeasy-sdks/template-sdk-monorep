/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type CommerceReportDimensionItems = {
    /**
     * The dimension's items index.
     */
    index?: number | undefined;
};

export type CommerceReportDimension = {
    /**
     * The dimension's index.
     */
    index?: number | undefined;
    /**
     * The dimension's display name.
     */
    displayName?: string | undefined;
    /**
     * The dimension's type.
     */
    type?: string | undefined;
    items?: Array<CommerceReportDimensionItems> | undefined;
};

/** @internal */
export namespace CommerceReportDimensionItems$ {
    export type Inbound = {
        index?: number | undefined;
    };

    export const inboundSchema: z.ZodType<CommerceReportDimensionItems, z.ZodTypeDef, Inbound> = z
        .object({
            index: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                ...(v.index === undefined ? null : { index: v.index }),
            };
        });

    export type Outbound = {
        index?: number | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CommerceReportDimensionItems> = z
        .object({
            index: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                ...(v.index === undefined ? null : { index: v.index }),
            };
        });
}

/** @internal */
export namespace CommerceReportDimension$ {
    export type Inbound = {
        index?: number | undefined;
        displayName?: string | undefined;
        type?: string | undefined;
        items?: Array<CommerceReportDimensionItems$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<CommerceReportDimension, z.ZodTypeDef, Inbound> = z
        .object({
            index: z.number().int().optional(),
            displayName: z.string().optional(),
            type: z.string().optional(),
            items: z.array(z.lazy(() => CommerceReportDimensionItems$.inboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.index === undefined ? null : { index: v.index }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.items === undefined ? null : { items: v.items }),
            };
        });

    export type Outbound = {
        index?: number | undefined;
        displayName?: string | undefined;
        type?: string | undefined;
        items?: Array<CommerceReportDimensionItems$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, CommerceReportDimension> = z
        .object({
            index: z.number().int().optional(),
            displayName: z.string().optional(),
            type: z.string().optional(),
            items: z.array(z.lazy(() => CommerceReportDimensionItems$.outboundSchema)).optional(),
        })
        .transform((v) => {
            return {
                ...(v.index === undefined ? null : { index: v.index }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.items === undefined ? null : { items: v.items }),
            };
        });
}
