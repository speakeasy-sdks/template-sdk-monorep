/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { DataIntegritySummary, DataIntegritySummary$ } from "./dataintegritysummary";
import * as z from "zod";

export type DataIntegritySummaries = {
    summaries?: Array<DataIntegritySummary> | undefined;
};

/** @internal */
export namespace DataIntegritySummaries$ {
    export type Inbound = {
        summaries?: Array<DataIntegritySummary$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<DataIntegritySummaries, z.ZodTypeDef, Inbound> = z
        .object({
            summaries: z.array(DataIntegritySummary$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.summaries === undefined ? null : { summaries: v.summaries }),
            };
        });

    export type Outbound = {
        summaries?: Array<DataIntegritySummary$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DataIntegritySummaries> = z
        .object({
            summaries: z.array(DataIntegritySummary$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.summaries === undefined ? null : { summaries: v.summaries }),
            };
        });
}
