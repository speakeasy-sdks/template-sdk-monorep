/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

export type LoanRef = {
    /**
     * The id of the object being referred to.
     */
    id?: string | undefined;
    /**
     * The dataConnectionId the object being referred to is associated with.
     */
    dataConnectionId?: string | undefined;
    /**
     * The object type data is referring to, e.g. Account.
     */
    type?: string | undefined;
};

/** @internal */
export namespace LoanRef$ {
    export type Inbound = {
        id?: string | undefined;
        dataConnectionId?: string | undefined;
        type?: string | undefined;
    };

    export const inboundSchema: z.ZodType<LoanRef, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            dataConnectionId: z.string().optional(),
            type: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.dataConnectionId === undefined
                    ? null
                    : { dataConnectionId: v.dataConnectionId }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        dataConnectionId?: string | undefined;
        type?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, LoanRef> = z
        .object({
            id: z.string().optional(),
            dataConnectionId: z.string().optional(),
            type: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.dataConnectionId === undefined
                    ? null
                    : { dataConnectionId: v.dataConnectionId }),
                ...(v.type === undefined ? null : { type: v.type }),
            };
        });
}
