/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Links the current record to the underlying record or data type that created it.
 *
 * @remarks
 *
 * For example, if a journal entry is generated based on an invoice, this property allows you to connect the journal entry to the underlying invoice in our data model.
 */
export type RecordRef = {
    /**
     * 'id' of the underlying record or data type.
     */
    id?: string | undefined;
    /**
     * Allowed name of the 'dataType'.
     */
    dataType?: string | undefined;
};

/** @internal */
export namespace RecordRef$ {
    export type Inbound = {
        id?: string | undefined;
        dataType?: string | undefined;
    };

    export const inboundSchema: z.ZodType<RecordRef, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string().optional(),
            dataType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.dataType === undefined ? null : { dataType: v.dataType }),
            };
        });

    export type Outbound = {
        id?: string | undefined;
        dataType?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, RecordRef> = z
        .object({
            id: z.string().optional(),
            dataType: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.id === undefined ? null : { id: v.id }),
                ...(v.dataType === undefined ? null : { dataType: v.dataType }),
            };
        });
}
