/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * References a category against which the item is tracked.
 *
 * @deprecated class: This will be removed in a future release, please migrate away from it as soon as possible.
 */
export type TrackingCategoryRef = {
    /**
     * Unique identifier to the tracking category.
     */
    id: string;
    /**
     * Name of tracking category.
     */
    name?: string | null | undefined;
};

/** @internal */
export namespace TrackingCategoryRef$ {
    export type Inbound = {
        id: string;
        name?: string | null | undefined;
    };

    export const inboundSchema: z.ZodType<TrackingCategoryRef, z.ZodTypeDef, Inbound> = z
        .object({
            id: z.string(),
            name: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                id: v.id,
                ...(v.name === undefined ? null : { name: v.name }),
            };
        });

    export type Outbound = {
        id: string;
        name?: string | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, TrackingCategoryRef> = z
        .object({
            id: z.string(),
            name: z.nullable(z.string()).optional(),
        })
        .transform((v) => {
            return {
                id: v.id,
                ...(v.name === undefined ? null : { name: v.name }),
            };
        });
}
