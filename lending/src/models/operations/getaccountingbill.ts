/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetAccountingBillRequest = {
    /**
     * Unique identifier for a company.
     */
    companyId: string;
    /**
     * Unique identifier for a bill.
     */
    billId: string;
};

export type GetAccountingBillResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Success
     */
    accountingBill?: components.AccountingBill | null | undefined;
};

/** @internal */
export namespace GetAccountingBillRequest$ {
    export type Inbound = {
        companyId: string;
        billId: string;
    };

    export const inboundSchema: z.ZodType<GetAccountingBillRequest, z.ZodTypeDef, Inbound> = z
        .object({
            companyId: z.string(),
            billId: z.string(),
        })
        .transform((v) => {
            return {
                companyId: v.companyId,
                billId: v.billId,
            };
        });

    export type Outbound = {
        companyId: string;
        billId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetAccountingBillRequest> = z
        .object({
            companyId: z.string(),
            billId: z.string(),
        })
        .transform((v) => {
            return {
                companyId: v.companyId,
                billId: v.billId,
            };
        });
}

/** @internal */
export namespace GetAccountingBillResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        AccountingBill?: components.AccountingBill$.Inbound | null | undefined;
    };

    export const inboundSchema: z.ZodType<GetAccountingBillResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            AccountingBill: z.nullable(components.AccountingBill$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.AccountingBill === undefined ? null : { accountingBill: v.AccountingBill }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        AccountingBill?: components.AccountingBill$.Outbound | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetAccountingBillResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            accountingBill: z.nullable(components.AccountingBill$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.accountingBill === undefined ? null : { AccountingBill: v.accountingBill }),
            };
        });
}
