/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetAccountingCreditNoteRequest = {
    /**
     * Unique identifier for a company.
     */
    companyId: string;
    /**
     * Unique identifier for a credit note.
     */
    creditNoteId: string;
};

export type GetAccountingCreditNoteResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Success
     */
    accountingCreditNote?: components.AccountingCreditNote | null | undefined;
};

/** @internal */
export namespace GetAccountingCreditNoteRequest$ {
    export type Inbound = {
        companyId: string;
        creditNoteId: string;
    };

    export const inboundSchema: z.ZodType<GetAccountingCreditNoteRequest, z.ZodTypeDef, Inbound> = z
        .object({
            companyId: z.string(),
            creditNoteId: z.string(),
        })
        .transform((v) => {
            return {
                companyId: v.companyId,
                creditNoteId: v.creditNoteId,
            };
        });

    export type Outbound = {
        companyId: string;
        creditNoteId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetAccountingCreditNoteRequest> =
        z
            .object({
                companyId: z.string(),
                creditNoteId: z.string(),
            })
            .transform((v) => {
                return {
                    companyId: v.companyId,
                    creditNoteId: v.creditNoteId,
                };
            });
}

/** @internal */
export namespace GetAccountingCreditNoteResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        AccountingCreditNote?: components.AccountingCreditNote$.Inbound | null | undefined;
    };

    export const inboundSchema: z.ZodType<GetAccountingCreditNoteResponse, z.ZodTypeDef, Inbound> =
        z
            .object({
                HttpMeta: components.HTTPMetadata$.inboundSchema,
                AccountingCreditNote: z
                    .nullable(components.AccountingCreditNote$.inboundSchema)
                    .optional(),
            })
            .transform((v) => {
                return {
                    httpMeta: v.HttpMeta,
                    ...(v.AccountingCreditNote === undefined
                        ? null
                        : { accountingCreditNote: v.AccountingCreditNote }),
                };
            });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        AccountingCreditNote?: components.AccountingCreditNote$.Outbound | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetAccountingCreditNoteResponse
    > = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            accountingCreditNote: z
                .nullable(components.AccountingCreditNote$.outboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.accountingCreditNote === undefined
                    ? null
                    : { AccountingCreditNote: v.accountingCreditNote }),
            };
        });
}
