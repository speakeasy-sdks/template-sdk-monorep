/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetAccountingDirectIncomeAttachmentRequest = {
    /**
     * Unique identifier for a company.
     */
    companyId: string;
    /**
     * Unique identifier for a connection.
     */
    connectionId: string;
    /**
     * Unique identifier for a direct income.
     */
    directIncomeId: string;
    /**
     * Unique identifier for an attachment.
     */
    attachmentId: string;
    /**
     * Time limit for the push operation to complete before it is timed out.
     */
    timeoutInMinutes?: number | undefined;
};

export type GetAccountingDirectIncomeAttachmentResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Success
     */
    accountingAttachment?: components.AccountingAttachment | null | undefined;
};

/** @internal */
export namespace GetAccountingDirectIncomeAttachmentRequest$ {
    export type Inbound = {
        companyId: string;
        connectionId: string;
        directIncomeId: string;
        attachmentId: string;
        timeoutInMinutes?: number | undefined;
    };

    export const inboundSchema: z.ZodType<
        GetAccountingDirectIncomeAttachmentRequest,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            companyId: z.string(),
            connectionId: z.string(),
            directIncomeId: z.string(),
            attachmentId: z.string(),
            timeoutInMinutes: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                companyId: v.companyId,
                connectionId: v.connectionId,
                directIncomeId: v.directIncomeId,
                attachmentId: v.attachmentId,
                ...(v.timeoutInMinutes === undefined
                    ? null
                    : { timeoutInMinutes: v.timeoutInMinutes }),
            };
        });

    export type Outbound = {
        companyId: string;
        connectionId: string;
        directIncomeId: string;
        attachmentId: string;
        timeoutInMinutes?: number | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetAccountingDirectIncomeAttachmentRequest
    > = z
        .object({
            companyId: z.string(),
            connectionId: z.string(),
            directIncomeId: z.string(),
            attachmentId: z.string(),
            timeoutInMinutes: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                companyId: v.companyId,
                connectionId: v.connectionId,
                directIncomeId: v.directIncomeId,
                attachmentId: v.attachmentId,
                ...(v.timeoutInMinutes === undefined
                    ? null
                    : { timeoutInMinutes: v.timeoutInMinutes }),
            };
        });
}

/** @internal */
export namespace GetAccountingDirectIncomeAttachmentResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        AccountingAttachment?: components.AccountingAttachment$.Inbound | null | undefined;
    };

    export const inboundSchema: z.ZodType<
        GetAccountingDirectIncomeAttachmentResponse,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            AccountingAttachment: z
                .nullable(components.AccountingAttachment$.inboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.AccountingAttachment === undefined
                    ? null
                    : { accountingAttachment: v.AccountingAttachment }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        AccountingAttachment?: components.AccountingAttachment$.Outbound | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetAccountingDirectIncomeAttachmentResponse
    > = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            accountingAttachment: z
                .nullable(components.AccountingAttachment$.outboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.accountingAttachment === undefined
                    ? null
                    : { AccountingAttachment: v.accountingAttachment }),
            };
        });
}
