/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import * as components from "../components/index.js";

export type ListCompaniesRequest = {
  /**
   * Page number. [Read more](https://docs.codat.io/using-the-api/paging).
   */
  page?: number | undefined;
  /**
   * Number of records to return in a page. [Read more](https://docs.codat.io/using-the-api/paging).
   */
  pageSize?: number | undefined;
  /**
   * Codat query string. [Read more](https://docs.codat.io/using-the-api/querying).
   */
  query?: string | undefined;
  /**
   * Field to order results by. [Read more](https://docs.codat.io/using-the-api/ordering-results).
   */
  orderBy?: string | undefined;
};

export type ListCompaniesResponse = {
  httpMeta: components.HTTPMetadata;
  /**
   * OK
   */
  companies?: components.Companies | undefined;
};

/** @internal */
export const ListCompaniesRequest$inboundSchema: z.ZodType<
  ListCompaniesRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  page: z.number().int().default(1),
  pageSize: z.number().int().default(100),
  query: z.string().optional(),
  orderBy: z.string().optional(),
});

/** @internal */
export type ListCompaniesRequest$Outbound = {
  page: number;
  pageSize: number;
  query?: string | undefined;
  orderBy?: string | undefined;
};

/** @internal */
export const ListCompaniesRequest$outboundSchema: z.ZodType<
  ListCompaniesRequest$Outbound,
  z.ZodTypeDef,
  ListCompaniesRequest
> = z.object({
  page: z.number().int().default(1),
  pageSize: z.number().int().default(100),
  query: z.string().optional(),
  orderBy: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListCompaniesRequest$ {
  /** @deprecated use `ListCompaniesRequest$inboundSchema` instead. */
  export const inboundSchema = ListCompaniesRequest$inboundSchema;
  /** @deprecated use `ListCompaniesRequest$outboundSchema` instead. */
  export const outboundSchema = ListCompaniesRequest$outboundSchema;
  /** @deprecated use `ListCompaniesRequest$Outbound` instead. */
  export type Outbound = ListCompaniesRequest$Outbound;
}

/** @internal */
export const ListCompaniesResponse$inboundSchema: z.ZodType<
  ListCompaniesResponse,
  z.ZodTypeDef,
  unknown
> = z.object({
  HttpMeta: components.HTTPMetadata$inboundSchema,
  Companies: components.Companies$inboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    "HttpMeta": "httpMeta",
    "Companies": "companies",
  });
});

/** @internal */
export type ListCompaniesResponse$Outbound = {
  HttpMeta: components.HTTPMetadata$Outbound;
  Companies?: components.Companies$Outbound | undefined;
};

/** @internal */
export const ListCompaniesResponse$outboundSchema: z.ZodType<
  ListCompaniesResponse$Outbound,
  z.ZodTypeDef,
  ListCompaniesResponse
> = z.object({
  httpMeta: components.HTTPMetadata$outboundSchema,
  companies: components.Companies$outboundSchema.optional(),
}).transform((v) => {
  return remap$(v, {
    httpMeta: "HttpMeta",
    companies: "Companies",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace ListCompaniesResponse$ {
  /** @deprecated use `ListCompaniesResponse$inboundSchema` instead. */
  export const inboundSchema = ListCompaniesResponse$inboundSchema;
  /** @deprecated use `ListCompaniesResponse$outboundSchema` instead. */
  export const outboundSchema = ListCompaniesResponse$outboundSchema;
  /** @deprecated use `ListCompaniesResponse$Outbound` instead. */
  export type Outbound = ListCompaniesResponse$Outbound;
}
