/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { DataIntegrityStatus, DataIntegrityStatus$ } from "./dataintegritystatus";
import * as z from "zod";

export type DataIntegrityStatuses = {
    metadata?: Array<DataIntegrityStatus> | undefined;
};

/** @internal */
export namespace DataIntegrityStatuses$ {
    export type Inbound = {
        metadata?: Array<DataIntegrityStatus$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<DataIntegrityStatuses, z.ZodTypeDef, Inbound> = z
        .object({
            metadata: z.array(DataIntegrityStatus$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
            };
        });

    export type Outbound = {
        metadata?: Array<DataIntegrityStatus$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DataIntegrityStatuses> = z
        .object({
            metadata: z.array(DataIntegrityStatus$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.metadata === undefined ? null : { metadata: v.metadata }),
            };
        });
}
