/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import {
    EnhancedCashFlowTransaction,
    EnhancedCashFlowTransaction$,
} from "./enhancedcashflowtransaction";
import * as z from "zod";

export type EnhancedCashFlowItem = {
    /**
     * An array of transaction data.
     */
    transactions?: Array<EnhancedCashFlowTransaction> | undefined;
};

/** @internal */
export namespace EnhancedCashFlowItem$ {
    export type Inbound = {
        transactions?: Array<EnhancedCashFlowTransaction$.Inbound> | undefined;
    };

    export const inboundSchema: z.ZodType<EnhancedCashFlowItem, z.ZodTypeDef, Inbound> = z
        .object({
            transactions: z.array(EnhancedCashFlowTransaction$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.transactions === undefined ? null : { transactions: v.transactions }),
            };
        });

    export type Outbound = {
        transactions?: Array<EnhancedCashFlowTransaction$.Outbound> | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, EnhancedCashFlowItem> = z
        .object({
            transactions: z.array(EnhancedCashFlowTransaction$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                ...(v.transactions === undefined ? null : { transactions: v.transactions }),
            };
        });
}
