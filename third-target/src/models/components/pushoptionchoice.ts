/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { PushOptionType, PushOptionType$ } from "./pushoptiontype";
import * as z from "zod";

export type PushOptionChoice = {
    /**
     * Allowed value for field.
     */
    value?: string | undefined;
    /**
     * The option type.
     */
    type?: PushOptionType | undefined;
    /**
     * The property's display name.
     */
    displayName?: string | undefined;
    /**
     * A description of the property.
     */
    description?: string | undefined;
    /**
     * The property is required if `True`.
     */
    required?: boolean | undefined;
};

/** @internal */
export namespace PushOptionChoice$ {
    export type Inbound = {
        value?: string | undefined;
        type?: PushOptionType | undefined;
        displayName?: string | undefined;
        description?: string | undefined;
        required?: boolean | undefined;
    };

    export const inboundSchema: z.ZodType<PushOptionChoice, z.ZodTypeDef, Inbound> = z
        .object({
            value: z.string().optional(),
            type: PushOptionType$.optional(),
            displayName: z.string().optional(),
            description: z.string().optional(),
            required: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.value === undefined ? null : { value: v.value }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.required === undefined ? null : { required: v.required }),
            };
        });

    export type Outbound = {
        value?: string | undefined;
        type?: PushOptionType | undefined;
        displayName?: string | undefined;
        description?: string | undefined;
        required?: boolean | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, PushOptionChoice> = z
        .object({
            value: z.string().optional(),
            type: PushOptionType$.optional(),
            displayName: z.string().optional(),
            description: z.string().optional(),
            required: z.boolean().optional(),
        })
        .transform((v) => {
            return {
                ...(v.value === undefined ? null : { value: v.value }),
                ...(v.type === undefined ? null : { type: v.type }),
                ...(v.displayName === undefined ? null : { displayName: v.displayName }),
                ...(v.description === undefined ? null : { description: v.description }),
                ...(v.required === undefined ? null : { required: v.required }),
            };
        });
}
