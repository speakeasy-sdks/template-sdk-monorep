/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as z from "zod";

/**
 * Report additional information, which is specific to Lending API reports.
 */
export type ReportInfo = {
    /**
     * The number of the page queried.
     */
    pageNumber?: number | undefined;
    /**
     * The number of transactions returned per page.
     */
    pageSize?: number | undefined;
    /**
     * The total number of transactions available for a company for the period specified in the query string.
     */
    totalResults?: number | undefined;
    /**
     * Name of the report.
     */
    reportName?: string | undefined;
    /**
     * The name of the company being queried.
     */
    companyName?: string | undefined;
    /**
     * Date the report was generated.
     */
    generatedDate?: string | undefined;
};

/** @internal */
export namespace ReportInfo$ {
    export type Inbound = {
        pageNumber?: number | undefined;
        pageSize?: number | undefined;
        totalResults?: number | undefined;
        reportName?: string | undefined;
        companyName?: string | undefined;
        generatedDate?: string | undefined;
    };

    export const inboundSchema: z.ZodType<ReportInfo, z.ZodTypeDef, Inbound> = z
        .object({
            pageNumber: z.number().int().optional(),
            pageSize: z.number().int().optional(),
            totalResults: z.number().int().optional(),
            reportName: z.string().optional(),
            companyName: z.string().optional(),
            generatedDate: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.pageNumber === undefined ? null : { pageNumber: v.pageNumber }),
                ...(v.pageSize === undefined ? null : { pageSize: v.pageSize }),
                ...(v.totalResults === undefined ? null : { totalResults: v.totalResults }),
                ...(v.reportName === undefined ? null : { reportName: v.reportName }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.generatedDate === undefined ? null : { generatedDate: v.generatedDate }),
            };
        });

    export type Outbound = {
        pageNumber?: number | undefined;
        pageSize?: number | undefined;
        totalResults?: number | undefined;
        reportName?: string | undefined;
        companyName?: string | undefined;
        generatedDate?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, ReportInfo> = z
        .object({
            pageNumber: z.number().int().optional(),
            pageSize: z.number().int().optional(),
            totalResults: z.number().int().optional(),
            reportName: z.string().optional(),
            companyName: z.string().optional(),
            generatedDate: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.pageNumber === undefined ? null : { pageNumber: v.pageNumber }),
                ...(v.pageSize === undefined ? null : { pageSize: v.pageSize }),
                ...(v.totalResults === undefined ? null : { totalResults: v.totalResults }),
                ...(v.reportName === undefined ? null : { reportName: v.reportName }),
                ...(v.companyName === undefined ? null : { companyName: v.companyName }),
                ...(v.generatedDate === undefined ? null : { generatedDate: v.generatedDate }),
            };
        });
}
