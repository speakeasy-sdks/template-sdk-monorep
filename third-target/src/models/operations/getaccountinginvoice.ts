/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetAccountingInvoiceRequest = {
    /**
     * Unique identifier for a company.
     */
    companyId: string;
    /**
     * Unique identifier for an invoice.
     */
    invoiceId: string;
};

export type GetAccountingInvoiceResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Success
     */
    accountingInvoice?: components.AccountingInvoice | null | undefined;
};

/** @internal */
export namespace GetAccountingInvoiceRequest$ {
    export type Inbound = {
        companyId: string;
        invoiceId: string;
    };

    export const inboundSchema: z.ZodType<GetAccountingInvoiceRequest, z.ZodTypeDef, Inbound> = z
        .object({
            companyId: z.string(),
            invoiceId: z.string(),
        })
        .transform((v) => {
            return {
                companyId: v.companyId,
                invoiceId: v.invoiceId,
            };
        });

    export type Outbound = {
        companyId: string;
        invoiceId: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetAccountingInvoiceRequest> = z
        .object({
            companyId: z.string(),
            invoiceId: z.string(),
        })
        .transform((v) => {
            return {
                companyId: v.companyId,
                invoiceId: v.invoiceId,
            };
        });
}

/** @internal */
export namespace GetAccountingInvoiceResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        AccountingInvoice?: components.AccountingInvoice$.Inbound | null | undefined;
    };

    export const inboundSchema: z.ZodType<GetAccountingInvoiceResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            AccountingInvoice: z.nullable(components.AccountingInvoice$.inboundSchema).optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.AccountingInvoice === undefined
                    ? null
                    : { accountingInvoice: v.AccountingInvoice }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        AccountingInvoice?: components.AccountingInvoice$.Outbound | null | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetAccountingInvoiceResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            accountingInvoice: z.nullable(components.AccountingInvoice$.outboundSchema).optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.accountingInvoice === undefined
                    ? null
                    : { AccountingInvoice: v.accountingInvoice }),
            };
        });
}
