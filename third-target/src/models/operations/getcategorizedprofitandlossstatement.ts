/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetCategorizedProfitAndLossStatementRequest = {
    /**
     * Unique identifier for a company.
     */
    companyId: string;
    /**
     * The date in which the report is created up to. Users must specify a specific date, however the response will be provided for the full month.
     */
    reportDate?: string | undefined;
    /**
     * The number of periods to return. If not provided, 12 periods will be used as the default value.
     */
    numberOfPeriods?: number | undefined;
};

export type GetCategorizedProfitAndLossStatementResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * OK
     */
    enhancedFinancialReport?: components.EnhancedFinancialReport | undefined;
};

/** @internal */
export namespace GetCategorizedProfitAndLossStatementRequest$ {
    export type Inbound = {
        companyId: string;
        reportDate?: string | undefined;
        numberOfPeriods?: number | undefined;
    };

    export const inboundSchema: z.ZodType<
        GetCategorizedProfitAndLossStatementRequest,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            companyId: z.string(),
            reportDate: z.string().optional(),
            numberOfPeriods: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                companyId: v.companyId,
                ...(v.reportDate === undefined ? null : { reportDate: v.reportDate }),
                ...(v.numberOfPeriods === undefined
                    ? null
                    : { numberOfPeriods: v.numberOfPeriods }),
            };
        });

    export type Outbound = {
        companyId: string;
        reportDate?: string | undefined;
        numberOfPeriods?: number | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetCategorizedProfitAndLossStatementRequest
    > = z
        .object({
            companyId: z.string(),
            reportDate: z.string().optional(),
            numberOfPeriods: z.number().int().optional(),
        })
        .transform((v) => {
            return {
                companyId: v.companyId,
                ...(v.reportDate === undefined ? null : { reportDate: v.reportDate }),
                ...(v.numberOfPeriods === undefined
                    ? null
                    : { numberOfPeriods: v.numberOfPeriods }),
            };
        });
}

/** @internal */
export namespace GetCategorizedProfitAndLossStatementResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        EnhancedFinancialReport?: components.EnhancedFinancialReport$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<
        GetCategorizedProfitAndLossStatementResponse,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            EnhancedFinancialReport: components.EnhancedFinancialReport$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.EnhancedFinancialReport === undefined
                    ? null
                    : { enhancedFinancialReport: v.EnhancedFinancialReport }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        EnhancedFinancialReport?: components.EnhancedFinancialReport$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetCategorizedProfitAndLossStatementResponse
    > = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            enhancedFinancialReport: components.EnhancedFinancialReport$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.enhancedFinancialReport === undefined
                    ? null
                    : { EnhancedFinancialReport: v.enhancedFinancialReport }),
            };
        });
}
