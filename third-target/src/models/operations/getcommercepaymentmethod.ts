/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetCommercePaymentMethodRequest = {
    /**
     * Unique identifier for a company.
     */
    companyId: string;
    /**
     * Unique identifier for a connection.
     */
    connectionId: string;
    /**
     * Unique identifier for a payment method.
     */
    paymentMethodId: string;
};

export type GetCommercePaymentMethodResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * OK
     */
    commercePaymentMethod?: components.CommercePaymentMethod | null | undefined;
};

/** @internal */
export namespace GetCommercePaymentMethodRequest$ {
    export type Inbound = {
        companyId: string;
        connectionId: string;
        paymentMethodId: string;
    };

    export const inboundSchema: z.ZodType<GetCommercePaymentMethodRequest, z.ZodTypeDef, Inbound> =
        z
            .object({
                companyId: z.string(),
                connectionId: z.string(),
                paymentMethodId: z.string(),
            })
            .transform((v) => {
                return {
                    companyId: v.companyId,
                    connectionId: v.connectionId,
                    paymentMethodId: v.paymentMethodId,
                };
            });

    export type Outbound = {
        companyId: string;
        connectionId: string;
        paymentMethodId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetCommercePaymentMethodRequest
    > = z
        .object({
            companyId: z.string(),
            connectionId: z.string(),
            paymentMethodId: z.string(),
        })
        .transform((v) => {
            return {
                companyId: v.companyId,
                connectionId: v.connectionId,
                paymentMethodId: v.paymentMethodId,
            };
        });
}

/** @internal */
export namespace GetCommercePaymentMethodResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        CommercePaymentMethod?: components.CommercePaymentMethod$.Inbound | null | undefined;
    };

    export const inboundSchema: z.ZodType<GetCommercePaymentMethodResponse, z.ZodTypeDef, Inbound> =
        z
            .object({
                HttpMeta: components.HTTPMetadata$.inboundSchema,
                CommercePaymentMethod: z
                    .nullable(components.CommercePaymentMethod$.inboundSchema)
                    .optional(),
            })
            .transform((v) => {
                return {
                    httpMeta: v.HttpMeta,
                    ...(v.CommercePaymentMethod === undefined
                        ? null
                        : { commercePaymentMethod: v.CommercePaymentMethod }),
                };
            });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        CommercePaymentMethod?: components.CommercePaymentMethod$.Outbound | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetCommercePaymentMethodResponse
    > = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            commercePaymentMethod: z
                .nullable(components.CommercePaymentMethod$.outboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.commercePaymentMethod === undefined
                    ? null
                    : { CommercePaymentMethod: v.commercePaymentMethod }),
            };
        });
}
