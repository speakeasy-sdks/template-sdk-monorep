/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetCommerceProductCategoryRequest = {
    /**
     * Unique identifier for a company.
     */
    companyId: string;
    /**
     * Unique identifier for a connection.
     */
    connectionId: string;
    /**
     * Unique identifier for a product.
     */
    productId: string;
};

export type GetCommerceProductCategoryResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * OK
     */
    commerceProductCategory?: components.CommerceProductCategory | null | undefined;
};

/** @internal */
export namespace GetCommerceProductCategoryRequest$ {
    export type Inbound = {
        companyId: string;
        connectionId: string;
        productId: string;
    };

    export const inboundSchema: z.ZodType<
        GetCommerceProductCategoryRequest,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            companyId: z.string(),
            connectionId: z.string(),
            productId: z.string(),
        })
        .transform((v) => {
            return {
                companyId: v.companyId,
                connectionId: v.connectionId,
                productId: v.productId,
            };
        });

    export type Outbound = {
        companyId: string;
        connectionId: string;
        productId: string;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetCommerceProductCategoryRequest
    > = z
        .object({
            companyId: z.string(),
            connectionId: z.string(),
            productId: z.string(),
        })
        .transform((v) => {
            return {
                companyId: v.companyId,
                connectionId: v.connectionId,
                productId: v.productId,
            };
        });
}

/** @internal */
export namespace GetCommerceProductCategoryResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        CommerceProductCategory?: components.CommerceProductCategory$.Inbound | null | undefined;
    };

    export const inboundSchema: z.ZodType<
        GetCommerceProductCategoryResponse,
        z.ZodTypeDef,
        Inbound
    > = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            CommerceProductCategory: z
                .nullable(components.CommerceProductCategory$.inboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.CommerceProductCategory === undefined
                    ? null
                    : { commerceProductCategory: v.CommerceProductCategory }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        CommerceProductCategory?: components.CommerceProductCategory$.Outbound | null | undefined;
    };

    export const outboundSchema: z.ZodType<
        Outbound,
        z.ZodTypeDef,
        GetCommerceProductCategoryResponse
    > = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            commerceProductCategory: z
                .nullable(components.CommerceProductCategory$.outboundSchema)
                .optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.commerceProductCategory === undefined
                    ? null
                    : { CommerceProductCategory: v.commerceProductCategory }),
            };
        });
}
