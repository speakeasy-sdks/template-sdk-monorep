/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetCreateOperationRequest = {
    /**
     * Unique identifier for a company.
     */
    companyId: string;
    /**
     * Unique identifier for the push operation.
     */
    pushOperationKey: string;
};

export type GetCreateOperationResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * OK
     */
    pushOperation?: components.PushOperation | undefined;
};

/** @internal */
export namespace GetCreateOperationRequest$ {
    export type Inbound = {
        companyId: string;
        pushOperationKey: string;
    };

    export const inboundSchema: z.ZodType<GetCreateOperationRequest, z.ZodTypeDef, Inbound> = z
        .object({
            companyId: z.string(),
            pushOperationKey: z.string(),
        })
        .transform((v) => {
            return {
                companyId: v.companyId,
                pushOperationKey: v.pushOperationKey,
            };
        });

    export type Outbound = {
        companyId: string;
        pushOperationKey: string;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetCreateOperationRequest> = z
        .object({
            companyId: z.string(),
            pushOperationKey: z.string(),
        })
        .transform((v) => {
            return {
                companyId: v.companyId,
                pushOperationKey: v.pushOperationKey,
            };
        });
}

/** @internal */
export namespace GetCreateOperationResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        PushOperation?: components.PushOperation$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetCreateOperationResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            PushOperation: components.PushOperation$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.PushOperation === undefined ? null : { pushOperation: v.PushOperation }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        PushOperation?: components.PushOperation$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetCreateOperationResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            pushOperation: components.PushOperation$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.pushOperation === undefined ? null : { PushOperation: v.pushOperation }),
            };
        });
}
