/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { SDKHooks } from "../hooks";
import { SDKOptions, serverURLFromOptions } from "../lib/config";
import { HTTPClient } from "../lib/http";
import { ClientSDK } from "../lib/sdks";
import { AccountBalances } from "./accountbalances";
import { CategorizedStatement } from "./categorizedstatement";
import { SDKBankingAccounts } from "./sdkbankingaccounts";
import { SDKTransactions } from "./sdktransactions";
import { TransactionCategories } from "./transactioncategories";

export class Banking extends ClientSDK {
    private readonly options$: SDKOptions & { hooks?: SDKHooks };

    constructor(options: SDKOptions = {}) {
        const opt = options as unknown;
        let hooks: SDKHooks;
        if (
            typeof opt === "object" &&
            opt != null &&
            "hooks" in opt &&
            opt.hooks instanceof SDKHooks
        ) {
            hooks = opt.hooks;
        } else {
            hooks = new SDKHooks();
        }

        super({
            client: options.httpClient || new HTTPClient(),
            baseURL: serverURLFromOptions(options),
            hooks,
        });

        this.options$ = { ...options, hooks };
        void this.options$;
    }

    private _categorizedStatement?: CategorizedStatement;
    get categorizedStatement() {
        return (this._categorizedStatement ??= new CategorizedStatement(this.options$));
    }

    private _accountBalances?: AccountBalances;
    get accountBalances() {
        return (this._accountBalances ??= new AccountBalances(this.options$));
    }

    private _accounts?: SDKBankingAccounts;
    get accounts() {
        return (this._accounts ??= new SDKBankingAccounts(this.options$));
    }

    private _transactions?: SDKTransactions;
    get transactions() {
        return (this._transactions ??= new SDKTransactions(this.options$));
    }

    private _transactionCategories?: TransactionCategories;
    get transactionCategories() {
        return (this._transactionCategories ??= new TransactionCategories(this.options$));
    }
}
